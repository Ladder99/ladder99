# github workflow to build ladder99/mtconnect agent docker image

# run manually at https://github.com/Ladder99/ladder99/actions
# secrets set at https://github.com/Ladder99/ladder99/settings/secrets/actions
# image hosted on https://hub.docker.com/repository/docker/ladder99

# instructions:
# 1. get current agent version from https://github.com/mtconnect/cppagent/blob/master/CMakeLists.txt
#    and update the version value below - the second version number is the xsl version.
# 2. build the mtconnect-agent by using that for the service name,
#    and triggering it manually from github actions page.
#    that might take a few hours for the multiarch build.
# 3. build the ladder99 agent by switching service name to 'agent',
#    PUSH the change, then trigger the workflow. this shouldn't take long.

name: build-agent

# define variables - used below
env:
  # note: service names correspond to folders in the pipeline folder
  # service: mtconnect-agent
  service: agent
  version: 1.7.0.3-0.1.0
  # for available platforms see output of a previous run -
  # ie the "Setup Docker BuildX" / "Inspect Builder" section
  # has eg "node_platforms": "linux/amd64,linux/arm64,linux/riscv64,linux/ppc64le,linux/s390x,linux/386,linux/arm/v7,linux/arm/v6"
  # but the platforms must also be included in the os image chosen -
  # eg the ubuntu image doesn't include linux/arm/v6.
  platforms: linux/amd64,linux/arm64,linux/arm/v7

# let user run workflow manually from actions tab
on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU emulator
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: pipeline/${{ env.service }}
          file: pipeline/${{ env.service }}/Dockerfile
          platforms: ${{ env.platforms }}

          # docker hub user/repo:tag
          tags: |
            ladder99/${{ env.service }}:latest
            ladder99/${{ env.service }}:${{ env.version }}

          # push to docker hub
          push: true
