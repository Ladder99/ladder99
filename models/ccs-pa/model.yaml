# ccs-pa
# this defines the structure of the xml that will get included in devices.xml.
# text substitution is performed, eg ${deviceId} is replaced by
# that value from devices.yaml.
# dataItems are defined in outputs.yaml.
# compilation is done with services/compiler.

model:
  id: ${deviceId} # eg 'ccs-pa-001'
  name: CCS-PA
  uuid: ${uuid} # eg 'e05363af-95d1-4354-b749-8fbb09d3499e'
  sampleInterval: 10

  description:
    manufacturer: CCS
    model: Emergent-PA-Pneumatic
    serialNumber: '${serialNumber}' # eg '001'
    text: Emergent Next Generation Print and Apply

  dataItems:
    dataItem:
      - lkmlkm
      - connection
      - asset_changed
      - asset_removed
      - dev_cond
      - dev_msg
      - fw_ver
      - func_mode

  components:
    controller:
      id: ${deviceId}-controller
      nativeName: plc
      description:
        text: Electronic board set responsible for coordinating all machine function.
      dataItems:
        dataItem:
          - e_stop

      components:
        path:
          id: ${deviceId}-path1
          name: path
          dataItems:
            dataItem:
              - state
              - wait_state
              - program
              - step
              - clk_time
              - up_time
              - fault_count
              - cycle_count
              - life_count
              - cycle_time #. ok here?

  systems:
    id: ${deviceId}-systems
    components:
      endEffector:
        id: ${deviceId}-end_effector
        dataItems:
          dataItem:
            - end_eff_cond
            - end_eff_message
            - smart_tamp_part_detect
            - tamp_air_assist
            - tamp_vacuum
            - tamp_cylinder
            - cylinder_extend_time
            - cylinder_home_disengage_time
            - cylinder_travel_time
            - tamp_vacuum_delay

        #compositions: []
      feeder:
        id: ${deviceId}-feeder
        dataItems:
          dataItem:
            - feed_cond
            - feed_message
            - feed_part_detect
            - web_take_up_motor_state
            - printer_reprint
            - printer_pause
            - printer_feed
            - printer_start_print
            - print_signal_time
            - print_time
            - transport_time
            - idle_time
            - printer_start_print_duration
            - printer_end_print_wait
            - product_sensor_one_edge_trigger
            - product_sensor_one_debounce

        #compositions: []
    #resources:
    #  components:
    #    personnel:
    #      dataItems:
    #        dataItem:
    #          - operator
