# paths
# define canonical ids in terms of short xpath-like expressions

# the dataitem path expression is on left, canonicalId is on right.
# path exprs are abbreviated xpaths.
# DataItem attribute order is (category,type,subtype), then have named attribs.
# Device as root element is assumed.

# if just element type is given assumes it's only for first one listed,
# eg Controller/Path/DataItem(event,program_edit) - 1st controller, 1st path ?

#. instead of breaking it into steps could check the whole path first?

# to erase from the canonical path -
# Controller(controller):

#. capture axes name -> part of canonical Id?
# or number eg Axes[1] -> axes1-actuator-condition?

#. use regex group capture and substitute into canonicalId string?
# eg this could give canonicalId 'x-machine':
# /Axes\((.*)\)/Linear\((.*)\)/DataItem(sample,position,actual,coordinateSystem=machine): $2-machine
#. but what about $1? translate to sthing like axes1/linear1/pos-machine?
#. or axes1-linear1-pos-machine? hmm

paths:
  Axes(a): axesA
  Controller(controller): controller #? or make it disappear?
  Coolant(coolant): coolant
  DataItem(condition,actuator): actuator-condition # servo-condition?
  DataItem(condition,angle): angle-condition
  DataItem(condition,communications): communications-condition
  DataItem(condition,load): load-condition
  DataItem(condition,logic_program): logic-program-condition
  DataItem(condition,motion_program): motion-program-condition
  DataItem(condition,position): position-condition
  DataItem(condition,system): system-condition # spindle-condition? distinguish from controller system-condition
  DataItem(condition,temperature): temperature-condition
  DataItem(event,asset_changed): asset-changed
  DataItem(event,asset_removed): asset-removed
  DataItem(event,availability): availability
  DataItem(event,axis_state): axis-state
  DataItem(event,chuck_state): chuck-state
  DataItem(event,controller_mode): controller-mode
  DataItem(event,door_state): door-state
  DataItem(event,emergency_stop): emergency-stop
  DataItem(event,execution): execution
  DataItem(event,functional_mode): functional-mode
  DataItem(event,line): line
  DataItem(event,pallet_id): pallet-id
  DataItem(event,part_count): part-count
  DataItem(event,path_feedrate_override,programmed): feedrate-override-programmed
  DataItem(event,path_feedrate_override,rapid): feedrate-override-rapid
  DataItem(event,program_comment,x:sub): subprogram-comment
  DataItem(event,program_comment): program-comment
  DataItem(event,program_edit_name): program-edit-name
  DataItem(event,program_edit): program-edit
  DataItem(event,program,x:sub): subprogram
  DataItem(event,program): program
  DataItem(event,rotary_mode): rotary-mode
  DataItem(event,rotary_velocity_override): rotary-velocity-override
  DataItem(event,tool_number): tool-number
  DataItem(event,user): user # aka operator
  DataItem(event,x:sequence_number): sequence-number
  DataItem(event,x:tool_group): tool-group
  DataItem(event,x:tool_suffix): tool-suffix
  DataItem(event,x:unit): unit
  DataItem(sample,accumulated_time,x:auto): auto-time
  DataItem(sample,accumulated_time,x:cut): cut-time
  DataItem(sample,accumulated_time,x:total): total-time
  DataItem(sample,accumulated_time,x:totalcuttime): total-auto-cut-time
  DataItem(sample,angle,actual,coordinateSystem=machine): machine-angle
  DataItem(sample,angle,actual,coordinateSystem=work): work-angle
  DataItem(sample,angular_velocity): angular-velocity
  DataItem(sample,axis_feed): feed
  DataItem(sample,concentration): concentration
  DataItem(sample,load,name=S2load): s2load #?
  DataItem(sample,load,name=Sload): sload #?? have this in a custom yaml file for setup?
  DataItem(sample,load): load
  DataItem(sample,path_feedrate): feedrate
  DataItem(sample,position,actual,coordinateSystem=machine): machine-position
  DataItem(sample,position,actual,coordinateSystem=work): work-position
  DataItem(sample,rotary_velocity,actual): rotary-velocity
  DataItem(sample,temperature): temperature
  DataItems:
  Door(door): door
  Electric(electric): electric
  Hydraulic(hydraulic): hydraulic
  Linear(x): linearX
  Linear(y): linearY
  Linear(z): linearZ
  Lubrication(lubrication): lubrication
  Path(path): path
  Personnel(personnel): personnel
  Pneumatic(pneumatic): pneumatic
  Resources(resources): resources
  Rotary(a): rotaryA
  Rotary(c): rotaryC
  Rotary(c2): rotaryC2
  Systems(systems): systems
