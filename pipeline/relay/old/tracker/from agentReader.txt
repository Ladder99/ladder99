
// // dimensionDefs
// // if any one of these dimensions changes,
// // start putting the time / count values in other bins.
// // keyed on dataitem name, eg 'operator'.
// //. move these into yaml, and have per client
// //. might want these to be per device or device type also?
// const dimensionDefs = {
//   hours1970: {},
//   // add these as needed, to be able to slice reports later
//   operator: {},
//   // machine: {},
//   // component: {},
//   // job: {},
//   // operation: {},
// }

// // valueDefs
// // dataitems that we want to track the state of.
// // will track time the dataitem spends in the 'when' state,
// // and add it to the given 'slot'.
// // keyed on dataitem / observation NAME, NOT the dataitem id.
// // so in the agent.xml, DO NOT include the deviceId in the names,
// // just have a plain descriptor.
// //. move these into yaml, and have per client
// //. might want these to be per device or device type also
// const valueDefs = {
//   availability: {
//     when: 'AVAILABLE',
//     slot: 'time_available',
//   },
//   // execution_state: {
//   //   when: 'ACTIVE',
//   //   slot: 'time_active',
//   // },
//   functional_mode: {
//     when: 'PRODUCTION',
//     // slot: 'time_production',
//     slot: 'time_active', //. this is kinda klugy - reuse the time_active definition because the metrics view is setup to use that to calculate uptime
//   },
// }

//


