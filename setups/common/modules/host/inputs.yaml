# inputs
# define values to be read by host.js driver and how to write to cache

# we need this detailed structure so know what to read,
# where to write it, and what representation to use for writing to the agent.

# this yaml format is specific to the host.js adapter driver.
# it interprets name as part of the cache key (eg 'host-temp').

# for available item and subitem names see https://github.com/sebhildebrandt/systeminformation

# some interesting ones -
# battery: hasBattery, currentCapacity, maxCapacity, capacityUnit, percent mWh
# cpu: manufacturer, brand, speed, cores
# cpuTemperature: main, cores
# currentLoad: currentLoad, currentLoadUser, currentLoadSystem
# disksIO: rIO, wIO
# dockerContainers: name, createdAt, state
# fsSize: fs, type, size, available
# mem: total, free, used
# osInfo: platform, distro, release, codename, arch, hostname
# wifiInterfaces: id, model, vendor

inputs:
  #
  # temperature
  cpuTemperature: # systeminformation item
    main: # systeminformation subitem
      name: temp # cache name, part of cache key
      decimals: 1 # optional for rounding floats

  # cpu
  currentLoad:
    currentLoad:
      name: cputot
      decimals: 1
    currentLoadUser:
      name: cpuuser
      decimals: 1
    currentLoadSystem:
      name: cpusys
      decimals: 1

  # memory
  mem:
    total:
      name: memtot
      decimals: -6
    free:
      name: memfree
      decimals: -6
    used:
      name: memused
      decimals: -6

  # os
  # important: this must come before fsSize so that will have the os info available
  osInfo:
    platform:
      name: osplatform
    # distro:
    #   name: osdistro
    # release:
    #   name: osrelease
    # codename:
    #   name: oscodename
    # arch:
    #   name: osarch
    # hostname:
    #   name: oshostname

  # - name: os
  #   item: osInfo
  #   subitems: platform, distro, release, codename, arch, hostname
  #   representation: dataset

  # # disk
  # # this returns an array, which requires some special processing.
  # # can either pick one value out, or sum up some or all, etc.
  # # so simplest to give a list of values to sum up.
  # # but the list depends on which os you are running on.
  # # then calculate the use %.
  # # see host.js driver for details.
  # fsSize:
  #   _:
  #   fs: {} # this gives the name of the drive/partition, eg 'overlay', 'C:\', etc
  #   size:
  #     name: disksize
  #     decimals: -6
  #   used:
  #     name: diskused
  #     decimals: -6
  #   available:
  #     name: diskavail
  #     decimals: -6
  #   # use:
  #   #   name: diskuse
  #   #   decimals: 0
