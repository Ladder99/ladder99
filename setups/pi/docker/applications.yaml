#. edit manually for now.

#. note: this is currently setup for the pi,
# where it expects the adapter and agent datafiles to be in /etc folders.
# so won't run on desktop with `just run pi` yet.

version: '3.7'

services:
  application:
    container_name: application
    image: node:15
    # user: node
    # working_dir: /home/node/app
    # command: npm start
    environment:
      - URL=http://agent:5000/sample
      - INTERVAL=2000
    # depends_on:
    #   agent:
    #     condition: service_started
    networks:
      - ladder99
    volumes:
      - ../../../services/application:/home/node/app
    #   - ../volumes/application:/etc/application
    logging:
      options:
        max-size: '1m'

  timescaledb:
    container_name: timescaledb
    image: timescale/timescaledb:latest-pg13
    ports:
      - '5432:5432/tcp'
    networks:
      - ladder99
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: gralgrut
      POSTGRES_DB: ladder99
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - $HOME/data/postgres:/var/lib/postgresql/data

  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana:7.1.5
  #   ports:
  #     - '3000:3000/tcp'
  #   networks:
  #     - ladder99
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #   volumes:
  #     - $HOME/data/grafana:/var/lib/grafana
  #   user: grafana

  # pgadmin:
  #   container_name: pgadmin
  #   image: biarms/pgadmin4:4.21
  #   ports:
  #     - '5050:5050/tcp'
  #   networks:
  #     - ladder99
  #   deploy:
  #     restart_policy:
  #       condition: on-failure

networks:
  ladder99:
    name: ladder99
