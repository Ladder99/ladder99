# docker compose file for the complete ladder99 pipeline.
# can override these settings in setup-specific config/pipeline-overrides.yaml files.

# run different services with eg
#   sh/pipeline start ccs-pa broker adapter agent

version: '3.8'

services:
  # adapter - convert machine data to shdr and send to agent
  adapter:
    container_name: adapter
    build: ../pipeline/adapter
    # image: ladder99/adapter:latest
    profiles:
      - all
      - adapter
    volumes:
      - ./$SETUP:/data/setup # has config/devices.yaml etc
      - ../models:/data/models # has model yamls
    networks:
      - ladder99
    logging:
      options:
        max-size: '1m'

  # agent - take in shdr and output html/json
  agent:
    container_name: agent
    profiles:
      - all
      - dashboard
      - agent
    image: ladder99/agent:latest
    working_dir: /data/agent
    command: agent debug agent.cfg
    # see https://docs.docker.com/compose/compose-file/compose-file-v3/#extra_hosts
    # extra_hosts:
    #   - foo:bar
    volumes:
      - ./$SETUP/volumes/agent:/data/agent # should have agent.cfg, devices.xml
    ports:
      - 5000:5000
    networks:
      - ladder99
    logging:
      options:
        max-size: '1m'

  # application - fetch data from agent and send to db
  application:
    container_name: application
    image: node:15.14-slim #. switch to Dockerfile
    profiles:
      - all
      - dashboard
      - app
    user: node
    working_dir: /home/node/app
    command: node /home/node/app/src/application.js
    init: true
    environment:
      # override these as needed in setup compose.yaml
      AGENT_ENDPOINTS: http://agent:5000
      FETCH_INTERVAL: 2000
      FETCH_COUNT: 800
      PGHOST:
      PGPORT:
      PGDATABASE:
      PGUSER:
      PGPASSWORD:
    # this fixes a problem on ubuntu - works on mac okay also
    #. but not on friendlywrt - host-gateway doesn't exist
    # see https://stackoverflow.com/a/67158212/243392
    # and https://docs.docker.com/compose/compose-file/compose-file-v3/#extra_hosts
    # extra_hosts:
    #   - host.docker.internal:host-gateway
    networks:
      - ladder99
    volumes:
      - ../pipeline/application:/home/node/app # has source code
    logging:
      options:
        max-size: '1m'

  # broker - get mqtt data from devices and publish to mtconnect adapter
  broker:
    container_name: broker
    image: eclipse-mosquitto
    profiles:
      - all
      - dashboard
      - broker
    ports:
      - 1883:1883
    volumes:
      - ./$SETUP/volumes/broker:/mosquitto # has config/mosquitto.conf
    networks:
      - ladder99
    logging:
      options:
        max-size: '1m'

  # database - store structure and time-series data
  database:
    container_name: database
    image: timescale/timescaledb:2.3.0-pg13
    ports:
      - $PGPORT:5432/tcp
    profiles:
      - all
      - dashboard
      - database
    # init: true
    environment:
      POSTGRES_DB: $PGDATABASE
      POSTGRES_USERNAME: $PGUSER
      POSTGRES_PASSWORD: $PGPASSWORD
    volumes:
      - ./$SETUP/volumes/database/data:/var/lib/postgresql/data
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - ladder99
    logging:
      options:
        max-size: '1m'

  # grafana - show real-time data from the database, handle notifications
  grafana:
    container_name: grafana
    image: grafana/grafana:7.5.5
    profiles:
      - all
      - dashboard
      - grafana
    ports:
      - $GRAFANA_PORT:3000/tcp
    environment:
      # need these for provisioning datasources
      # PGHOST: timescaledb
      PGHOST:
      PGPORT:
      PGDATABASE:
      PGUSER:
      PGPASSWORD:
      INFLUXDB_DB:
      INFLUXDB_USER:
      INFLUXDB_PASSWORD:
      # grafana will download and install these automatically
      # https://grafana.com/docs/grafana/latest/installation/docker/#install-plugins-in-the-docker-container
      GF_INSTALL_PLUGINS: natel-discrete-panel,natel-plotly-panel,michaeldmoore-scatter-panel
    volumes:
      # note: grafana.ini is located in /etc/grafana by default -
      # other folders are specified there.
      - ./$SETUP/volumes/grafana/etc:/etc/grafana
      - ./$SETUP/volumes/grafana/var:/var/lib/grafana
    # user: grafana
    #. get warning that these are blank, though echo $UID works - why?
    # but even if blank, now grafana is able to write to /var/lib/grafana.
    # gives permission error without this.
    # does blank here mean root?
    # user: '$UID:$GID'
    #.. don't use root here
    user: root
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - ladder99
    logging:
      options:
        max-size: '1m'

  # influxdb - store edge device data (will move to postgres)
  influxdb:
    container_name: influxdb
    # image: influxdb:2.0 # not avail for 32bit - needs 64bit os
    image: influxdb:1.8 # need v1 for https://grafana.com/grafana/dashboards/12034
    ports:
      - '8086:8086'
    profiles:
      - all
      - edge
      - influxdb
    environment:
      INFLUXDB_DB:
      INFLUXDB_ADMIN_USER:
      INFLUXDB_ADMIN_PASSWORD:
      INFLUXDB_USER:
      INFLUXDB_PASSWORD:
    volumes:
      - ./$SETUP/volumes/influxdb/config:/etc/influxdb
      - ./$SETUP/volumes/influxdb/data:/var/lib/influxdb
    networks:
      - ladder99
    logging:
      options:
        max-size: '1m'

  # pgadmin - admin console for postgres database
  pgadmin:
    container_name: pgadmin
    image: biarms/pgadmin4:latest
    profiles:
      - all
      - pgadmin
    ports:
      - '5050:5050/tcp'
    networks:
      - ladder99
    deploy:
      restart_policy:
        condition: on-failure

  # play - playback device recordings
  play:
    container_name: play
    build: ../pipeline/recorder
    profiles:
      - play
    command: recorder --mode play --host broker --folder /data/models/ccs-pa/recorder
    volumes:
      - ../models:/data/models
    networks:
      - ladder99
    logging:
      options:
        max-size: '1m'

  # portainer - docker container viewer/management
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    profiles:
      - all
      - portainer
    ports:
      - '9001:9000' #.... changed from 9000:9000 - make envar
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./$SETUP/volumes/portainer/data:/data
    restart: always
    networks:
      - ladder99
    logging:
      driver: 'none'

  # record - record device messages for future playback
  record:
    container_name: record
    build: ../pipeline/recorder
    profiles:
      - record
    command: recorder --mode record --host broker --folder /data/models/ccs-pa/recorder
    volumes:
      - ../models:/data/models
    networks:
      - ladder99
    logging:
      options:
        max-size: '1m'

  # telegraf - send data from edge device to influxdb
  telegraf:
    container_name: telegraf
    image: telegraf:1.18
    profiles:
      - all
      - edge
      - telegraf
    environment:
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_DB:
      INFLUXDB_PASSWORD:
    volumes:
      - ./$SETUP/volumes/telegraf:/etc/telegraf
    networks:
      - ladder99
    logging:
      options:
        max-size: '1m'

networks:
  ladder99:
    name: ladder99
