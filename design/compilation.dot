digraph "ladder99-compilation" {

  // styles
  graph [ label="Ladder99 MTConnect Compilation\n "; color=lightgray; ];
  graph [ fontsize=20 ];
  graph [ labelloc=t ];
  // graph [ ranksep=0.2 ];
  // graph [ nodesep=0.35 ];
  // graph [ rankdir=LR; ] // left-to-right
  node [ color=gray; fillcolor=white; style=filled ];
  edge [ color=gray ];
  edge [ fontsize=12; fontcolor=gray30; ];

  // nodes
  // DeviceSheet [ label="device.gsheet" ];
  DevicesYaml [ label="devices.yaml\n(devices)" ];
  Device1 [ label="device1\n(device.yaml,\nsources)" ];
  Source1 [ label="source1\n(model.yaml\ninputs.yaml\noutputs.yaml\ntypes.yaml)" ];
  Source2 [ label="source2\n(model.yaml\ninputs.yaml\noutputs.yaml\ntypes.yaml)" ];
  Device2 [ label="device2\n(device.yaml,\nsources)" ];
  Compiler [ label="Compiler" ];
  // DeviceJs [ label="Adapter plugin\n(device.js)" ];
  DevicesXml [ label="devices.xml" ];
  Adapter [ label="Adapter\nwith cache\nand plugins\n(NodeJS)" ];
  Agent [ label="Agent\n(C++/cppagent)" ];

  // edges
  // Device1 -> DevicesYaml;
  // Device2 -> DevicesYaml;
  DevicesYaml -> Device1;
  DevicesYaml -> Device2;
  Device1 -> Source1;
  Device1 -> Source2;
  // DeviceSheet -> Compiler;
  // DevicesYaml -> Compiler;
  // ModelYaml -> Compiler;
  // CalcsYaml -> Compiler;
  // TypesYaml -> Compiler;
  // DeviceYaml -> Compiler;
  // DevicesYaml -> Compiler;
  // Compiler -> DeviceJs;
  // Compiler -> DevicesXml;
  // DeviceJs -> Adapter;
  // DevicesXml -> Agent;
  // Adapter -> Agent [ label="SHDR" ];
  // ModelYaml -> DeviceYaml [ label="structures" ];
  // DeviceSheet -> ModelYaml [ label="feeds into" ];
  // DeviceYaml -> DeviceJs [ label="helps generate" ];
  // DeviceJs -> Adapter [ label="plugs into" ];
  // DeviceYaml -> DevicesXml [ label="feeds into" ];
  // Adapter -> Agent [ label="SHDR/\nTCP 7878" ];
  // DevicesYaml -> DevicesXml [ label="structures" ];
  // DevicesXml -> Agent [ label="used by" ];

  // rank
  // { rank=same; Adapter Agent };
}
