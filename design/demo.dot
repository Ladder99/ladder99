// graphviz diagram
// colors https://www.graphviz.org/doc/info/colors.html

digraph {

  //------------------------------------------------------------------------
  // styles
  //------------------------------------------------------------------------

  graph [ label="Ladder99 Demo Setup Topology\n ", color=lightgray; ];
  graph [ fontsize=20 ];
  graph [ labelloc=t ];
  graph [ ranksep=0.2 ];
  graph [ nodesep=0.35 ];
  graph [ rankdir=LR; ] // left-to-right
  graph [ fontname="sans-serif" ];

  node [ color=gray, fillcolor=white, style=filled ];
  node [ fontname="sans-serif", fontcolor=gray30 ];

  edge [ color=gray ];
  edge [ fontsize=12, fontcolor=gray30 ];
  edge [ fontname="sans-serif" ];

  //------------------------------------------------------------------------
  // nodes
  //------------------------------------------------------------------------

  // devices
  // PA [ fillcolor=lavender, label="CCS P&A" ];
  // HMI [ fillcolor=lavender, label="Rockwell HMI" ];
  // Motor [ fillcolor=lavender, label="VFD Motor" ];
  // OldMachine3 [ fillcolor=lavender, label="Device" ];
  Camera [ fillcolor=lavender, label="Camera1" ];
  Camera2 [ fillcolor=lavender, label="Camera2" ];
  // Autoclave [ fillcolor=lavender, label="Autoclave" ];
  // OldMachine1 [ fillcolor=lavender, label="Old Machine 1" ];

  // intermediaries
  // Broker1 [ fillcolor=lightblue, label="MQTT Broker\n(Mosquitto)" ];
  // Broker3 [ fillcolor=lightblue, label="MQTT Broker\n(Mosquitto)" ];
  // Broker4 [ fillcolor=lightblue, label="MQTT Broker\n(Mosquitto)" ];
  // Kepware1 [ fillcolor=lightblue, label="Kepware\n(Windows)"];
  // Kepware2 [ fillcolor=lightblue, label="Kepware+\nIoT Gateway\n(Windows)"];
  // CPC [ fillcolor=lightblue, label="ASC CPC" ];
  // PLC4X [ fillcolor=lightblue, label="PLC4X\n(Java)" ];

  // mtconnect
  Adapter [ fillcolor=greenyellow, label="Adapter\nwith cache and\nplugins\n(NodeJS)" ];
  Agent [ fillcolor=greenyellow, label="Agent\n(C++/cppagent)" ];
  Application [ fillcolor=greenyellow, label="Application\n(NodeJS)" ];

  // diode
  // DiodeSender [ label="Diode Sender\n(Java+RabbitMQ)" ];
  // DiodeReceiver [ label="Diode Receiver\n(Java+RabbitMQ)" ];

  // applications
  Database [ fillcolor=greenyellow, label="Database\n(Postgres/\nTimescaleDB)" ];
  Visualizer [ fillcolor=greenyellow, label="Visualizer\n(Grafana/\nSuperset)" ];
  Cloud [ fillcolor=gray90, label="Cloud Storage\n(AWS/GCP)" ];
  Browser [ fillcolor=gray90 ];
  Browser2 [ fillcolor=gray90, label="Browser" ];
  // LOI [ fillcolor=gray90, label="LOI\n(SvelteJS)" ];

  // users
  // Admin [ fillcolor=lightyellow ];
  // Operator [ fillcolor=lightyellow ];


  //------------------------------------------------------------------------
  // edges
  //------------------------------------------------------------------------

  // PA -> Broker1 [ label="  TCP  ", dir=both ];
  // Camera -> Broker3 [ label="  TCP  ", dir=both ];
  // Autoclave -> CPC [ dir=both ];
  // Broker1 -> Adapter [ label="MQTT", dir=both ];
  // Broker3 -> Adapter [ label="MQTT", dir=both ];
  // Broker4 -> Adapter [ label="MQTT", dir=both ];
  // OldMachine1 -> PLC4X; // [ label="proprietary\nprotocol" ];
  // PLC4X -> Broker3 [ label="" ];
  Camera -> Adapter;
  Camera2 -> Adapter;
  // HMI -> Kepware1 [ label="ethernet/ip" ];
  // Motor -> Kepware1 [ label="modbus" ];
  // Kepware1 -> Adapter [ label="OPC/UA" ];
  // Kepware2 -> Gateway;
  // CPC -> Adapter [ label="text" ];
  // Gateway -> Broker4 [ label="MQTT" ];
  // OldMachine3 -> Kepware2;
  // Kepware2 -> Broker4 [ label="MQTT" ];
  Adapter -> Agent [ label="SHDR /   \nTCP 7878+         ", dir=both ];
  // Adapter -> DiodeSender [ label="SHDR /   \nTCP 7878      ", dir=both, style=dotted ];
  // DiodeSender -> DiodeReceiver [ label="UDP    ", style=dotted ];
  // DiodeReceiver -> Agent [ label="SHDR /    \nTCP 7878        ", style=dotted ];
  Agent -> Application [ dir=both; label="XML / \nHTTP 5000          " ];
  Agent -> Browser [ label="HTML /\nHTTP 5000" ];
  Application -> Database [ dir=both ];
  Database -> Visualizer [ dir=both ];
  Database -> Cloud;
  Visualizer -> Browser2 [ dir=both ];
  // Application -> LOI;
  // LOI -> Operator;


  //------------------------------------------------------------------------
  // ranks
  //------------------------------------------------------------------------

  { rank=same; Adapter Agent Application Database Visualizer };
  // { rank=same; DiodeSender DiodeReceiver Cloud Admin };
  // { rank=same; Cloud Admin };
}
