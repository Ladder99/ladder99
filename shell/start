#!/bin/bash

# run ladder99 pipeline with docker compose.

usage="
Usage: ./l99 start [OPTIONS] SETUP SERVICES

Run the Ladder99 pipeline with a list of services/profiles to include.

SETUP is a client name or setup folder, eg oxbox, or ./setups/vmc.

OPTIONS
  -c, --console   run the services attached to the console for logging

SERVICES      space-delim list of services or profiles to start
  all         run all relevant services for a setup - eg adapter, agent, etc

Examples
    ./l99 start demo base
    ./l99 start ./setups/example agent grafana
    ./l99 start demo --console play
"

# note: this needs to run as /bin/bash, NOT /bin/sh - led to bug on encabulator
# where it wasn't parsing [[ $setup = .* ]] correctly.
# some discussion here
# https://unix.stackexchange.com/questions/379464/why-does-this-script-work-in-the-terminal-but-not-from-a-file

# show help if count of params is zero
if [ $# -eq 0 ]; then
    echo "$usage"
    exit 1
fi

# default values
MODE=startd # detached mode

# get options/arguments
# while $1 starts with '-'
while [[ $1 = \-* ]]
do
    if [ $1 = "-c" ] || [ $1 = "--console" ]; then
        shift
        MODE=start # console mode
    fi
done

# get setup folder
# if starts with '.' treat as relative to main dir, else relative to setups folder
if [[ $1 = .* ]]; then
    SETUP=$1
else
    # SETUP=../client-$1
    # SETUP=./setups/$1
    SETUP=../setup-$1
fi
shift

# get services/profiles
SERVICES=$* # eg 'agent play'

# build command and call it
CMD="export SETUP=$SETUP && shell/pipeline $MODE $SETUP $SERVICES"
echo $CMD
bash -c "$CMD"
