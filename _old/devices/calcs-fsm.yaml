calcs:
  connection:
    id: ${serialNumber}-connection
    category: EVENT
    type: AVAILABILITY
    #value: types.AVAILABILITY[cache.get('${serialNumber}-status-connection')]
    value: sm`UNAVAILABLE '!${serialNumber}-status-connection -eq online' -> AVAILABLE;
              AVAILABLE '!${serialNumber}-status-connection -eq offline || !plugin.protocol -not healthy' -> UNAVAILABLE;

  asset_changed:
    id: ${serialNumber}-asset_changed
    category: EVENT
    type: ASSET_CHANGED
    value:

  asset_removed:
    id: ${serialNumber}-asset_removed
    category: EVENT
    type: ASSET_REMOVED
    value: 

  dev_cond:
    id: ${serialNumber}-dev_cond
    category: CONDITION
    type: SYSTEM
    #value: any hard faults? = Fault, any soft faults? = Warning, no faults = Normal
    value:  sm`NORMAL '!${serialNumber}-status-faults -all @.hard -eq false' -> WARNING;
               NORMAL '!${serialNumber}-status-faults -any @.hard -eq true' -> FAULT;
               WARNING '!${serialNumber}-status-faults -any @.hard -eq true' -> FAULT;
               FAULT '!${serialNumber}-status-faults -all @.hard -eq false' -> WARNING;
               WARNING '!${serialNumber}-status-faults -empty' -> NORMAL;
               FAULT '!${serialNumber}-status-faults -empty' -> NORMAL;`

  dev_msg:
    id: ${serialNumber}-dev_msg
    category: EVENT
    type: MESSAGE
    representation: DATA_SET # set of kv pairs, part2 7.2.2.12
    #value: # fault_id:fault_value, fault_id:fault_value, ...
    #value: cache.get('${serialNumber}-status-faults').as_dataset(@.key, @.value.description)
    value: dataset`!${serialNumber}-status-faults % @.key, @.value.desciption`

  fw_ver:
    id: ${serialNumber}-fw_ver # eg 'CCS123-fw_ver'
    category: EVENT
    type: FIRMWARE
    subType: VERSION
    #value: cache.get('${serialNumber}-status-build_no')
    value: value`${serialNumber}-status-state`

  e_stop:
    id: ${serialNumber}-e_stop
    category: EVENT
    type: EMERGENCY_STOP
    #value: types.EMERGENCY_STOP[cache.get('${serialNumber}-%I0.10')]
    #value: "(cache.get('${serialNumber}-status-faults').any([10])) ? 'TRIGGERED' : 'ARMED'"
    value: sm`ARMED '!${serialNumber}-status-faults -contains 10' -> TRIGGERED;
              TRIGGERED '!${serialNumber}-status-faults -notcontains 10' -> ARMED;`

  state:
    id: ${serialNumber}-state
    category: EVENT
    type: EXECUTION
    #value: types.EXECUTION[cache.get('${serialNumber}-status-state')]
    value: sm`PROGRAM_STOPPED '!${serialNumber}-status-state -eq 50 || 100' -> WAIT;
              WAIT '!${serialNumber}-status-state -eq 50 || 100' -> PROGRAM_STOPPED;
              WAIT '!${serialNumber}-status-state -eq 400' -> ACTIVE; 
              ACTIVE '!${serialNumber}-status-state -eq 250 || 300' -> WAIT;`