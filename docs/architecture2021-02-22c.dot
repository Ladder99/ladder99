digraph "ladder99-adapter" {

  // styles
  graph [ label="Ladder99 MTConnect data flow"; color=lightgray; ];
  graph [ labelloc=t ];
  graph [ ranksep=0.5 ];
  graph [ rankdir=LR; ] // left-to-right
  node [ color=lightgray; fillcolor=white; style=filled ];
  edge [ color=lightgray, fontcolor=gray ];
  // edge [ labeldistance=4 ];

  // nodes
  PLC1 [ fillcolor=lavender; label="PLC" ];
  PLC2 [ fillcolor=lavender; label="PLC" ];
  PLC4X [ label="PLC4X\n(Java)" ];
  Broker [ label="MQTT Broker\n(NodeJS)" ];
  Adapter [ fillcolor=lightblue; label="MTConnect\nAdapter\n(NodeJS)" ];
  Receiver [ label="Data Diode\n(NodeJS)" ];
  Agent [ fillcolor=lightblue; label="MTConnect\nAgent\n(C++)" ];

  Application [ fillcolor=lightblue; label="MTConnect\nApplication\n(NodeJS)" ];
  LOI [ label="LOI\n(SvelteJS)" ];
  Database [ label="Database\n(InfluxDB/TimescaleDB)" ];
  Visualizer [ label="Visualizer\n(Grafana/Superset)" ];
  Cloud [ label="Cloud Storage\n(AWS/GCP)" ];
  Operator [ fillcolor=lightyellow ];
  Admin [ fillcolor=lightyellow ];

  // edges
  PLC2 -> Broker [ label="JSON/\nMQTT" ];
  PLC1 -> PLC4X [ label="proprietary\nprotocol" ];
  PLC4X -> Broker [ label="JSON/\nMQTT" ];
  Broker -> Adapter [ label="JSON/\nMQTT" ];
  Adapter -> Receiver [ label="SHDR/\nUDP" ];
  Receiver -> Agent [ label="SHDR/\nTCP" ];
  Agent -> Application [ label="XML/\nHTTP" ];
  Application -> Agent [ label="HTTP" ];
  Application -> Database;
  Database -> Visualizer;
  Database -> Cloud;
  Application -> LOI;
  LOI -> Operator;
  Visualizer -> Admin;

  // rank
  { rank=same; Operator Admin Cloud };

  // subgraphs
  subgraph cluster1a {
    graph [ label="New Machine" ];
    PLC2;
  }
  subgraph cluster1b {
    graph [ label="Old Machine" ];
    PLC1;
  }
  subgraph cluster2 {
    graph [ label="Raspberry Pi 1" ];
    PLC4X;
    Broker;
    Adapter;
    Receiver;
    Agent;
  }
  subgraph cluster4 {
    graph [ label="Raspberry Pi 2" ];
    Application;
    Database;
    Visualizer;
    LOI;
    { rank=same; Application Database };
  }
}
