digraph "ladder99-adapter" {

  // styles
  graph [ label="Ladder99 MTConnect data flow\n "; color=lightgray; ];
  graph [ fontsize=20 ];
  graph [ labelloc=t ];
  graph [ ranksep=0.2 ];
  graph [ nodesep=0.35 ];
  graph [ rankdir=LR; ] // left-to-right
  node [ color=gray; fillcolor=white; style=filled ];
  edge [ color=gray ];
  edge [ fontsize=12; fontcolor=gray30; ];

  // nodes
  OldMachine [ fillcolor=lavender; label="Old Machine" ];
  PLC4X [ label="PLC4X\n(Java)" ];
  PA1 [ fillcolor=lavender; label="CCS P&A 1" ];
  PA2 [ fillcolor=lavender; label="CCS P&A 2" ];
  Broker1 [ label="MQTT Broker 1\n(Mosquitto)" ];
  Broker2 [ label="MQTT Broker 2\n(Mosquitto)" ];
  Broker3 [ label="MQTT Broker 3\n(Mosquitto)" ];
  Client1 [ label="MQTT Client 1\n(NodeJS)" ];
  Client2 [ label="MQTT Client 2\n(NodeJS)" ];
  Client3 [ label="MQTT Client 2\n(NodeJS)" ];
  Adapter [ label="MTConnect\nAdapter\n(NodeJS)" ];
  // Device1Sheet [ fillcolor=greenyellow; label="device1.sheet" ];
  // Device1Yaml [ fillcolor=greenyellow; label="device1.yaml" ];
  // Device1Js [ label="device1.js" ];
  // Device2Sheet [ fillcolor=greenyellow; label="device2.sheet" ];
  // Device2Yaml [ fillcolor=greenyellow; label="device2.yaml" ];
  // Device2Js [ label="device2.js" ];
  // DiodeSender [ label="Diode Sender\n(Java+RabbitMQ)" ];
  // DiodeReceiver [ label="Diode Receiver\n(Java+RabbitMQ)" ];
  // DevicesXml [ label="devices.xml" ];
  Agent [ label="MTConnect\nAgent\n(C++/cppagent)" ];
  Application [ label="MTConnect\nApplication\n(NodeJS)" ];
  Database [ label="Database\n(InfluxDB/\nTimescaleDB)" ];
  Visualizer [ label="Visualizer\n(Grafana/\nSuperset)" ];
  Cloud [ label="Cloud Storage\n(AWS/GCP)" ];
  Admin [ fillcolor=lightyellow ];
  // LOI [ label="LOI\n(SvelteJS)" ];
  // Operator [ fillcolor=lightyellow ];

  // edges
  OldMachine -> PLC4X [ label="proprietary\nprotocol" ];
  PLC4X -> Broker3 [ label="MQTT" ];
  PA1 -> Broker1 [ label="MQTT" ];
  PA2 -> Broker2 [ label="MQTT" ];
  Broker1 -> Client1 [ label="MQTT\nTCP 1883" ];
  Broker2 -> Client2 [ label="MQTT\nTCP 1883" ];
  Broker3 -> Client3 [ label="MQTT\nTCP 1883" ];
  Client1 -> Adapter [ label="MQTT\nTCP 1883" ];
  Client2 -> Adapter [ label="MQTT\nTCP 1883" ];
  Client3 -> Adapter [ label="MQTT\nTCP 1883" ];
  Adapter -> Agent [ label="SHDR /   \nTCP 7878      " ];
  // Device1Sheet -> Device1Yaml [ label="feeds into" ];
  // Device1Yaml -> Device1Js [ label="generates" ];
  // Device1Js -> Client1 [ label="used by" ];
  // Device2Sheet -> Device2Yaml [ label="feeds into" ];
  // Device2Yaml -> Device2Js [ label="generates" ];
  // Device2Js -> Client2 [ label="used by" ];
  // Device1Yaml -> DevicesXml [ label="generates" ];
  // Device2Yaml -> DevicesXml [ label="generates" ];
  // DiodeSender -> DiodeReceiver [ label="UDP    " ];
  // DiodeReceiver -> Agent [ label="SHDR /    \nTCP 7878        " ];
  // Adapter -> Agent [ label="SHDR/\nTCP 7878" ];
  // DevicesXml -> Agent [ label="used by" ];
  Agent -> Application [ dir=both; label="XML / \nHTTP 5000          " ];
  Application -> Database [ dir=both ];
  Database -> Visualizer [ dir=both ];
  Database -> Cloud;
  Visualizer -> Admin [ dir=both ];
  // Application -> LOI;
  // LOI -> Operator;

  // rank
  // { rank=same; DiodeSender DiodeReceiver Agent Application Database Visualizer };
  { rank=same; Adapter Agent Application Database Visualizer };
  { rank=same; Cloud Admin };
}
